/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string>
#include <dust/core.h>
#include <dust/exceptions/dust_exception.h>
/* Header for class be_uantwerpen_idlab_dust_core_Core_Native */

#ifndef _Included_be_uantwerpen_idlab_dust_core_Core_Native
#define _Included_be_uantwerpen_idlab_dust_core_Core_Native
#ifdef __cplusplus
extern "C"
{
#endif

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    constructor
 * Signature: (Ljava/lang/String;)J
 */
  JNIEXPORT jlong JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_constructor__Ljava_lang_String_2(JNIEnv *env, jclass staticClass, jstring blockName);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    constructor
 * Signature: (Ljava/lang/String;Ljava/lang/String;)J
 */
  JNIEXPORT jlong JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_constructor__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jclass staticClass, jstring blockName, jstring directoryPath);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    destructor
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_destructor(JNIEnv *env, jclass staticClass, jlong pointer);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    publish
 * Signature: (J, Ljava/lang/String;[B)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_publish(JNIEnv *env, jclass, jlong, jstring channelName, jbyteArray byteArray);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    registerListener
 * Signature: (J, Ljava/lang/String;Ljava/util/function/Consumer;)Z
 */
  JNIEXPORT jboolean JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_registerListener(JNIEnv *env, jclass, jlong, jstring channelName, jobject consumerObject);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    getChannels
 * Signature: (J, )[Ljava/lang/String;
 */
  JNIEXPORT jobjectArray JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_getChannels(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    setup
 * Signature: (J, )V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_setup(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    connect
 * Signature: (J, )V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_connect(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    disconnect
 * Signature: (J, )V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_disconnect(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    setConfigurationFile
 * Signature: (J, Ljava/lang/String;)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_setConfigurationFile(JNIEnv *env, jclass, jlong, jstring configurationFilePath);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    reloadConfigurationFile
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_reloadConfigurationFile(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    parseConfigurationFile
 * Signature: (J, Ljava/lang/String;)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_parseConfigurationFile(JNIEnv *env, jclass, jlong, jstring configurationFilePath);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    getName
 * Signature: (J)Ljava/lang/String;
 */
  JNIEXPORT jstring JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_getName(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    cycleOnce
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_cycleOnce(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    waitForChange
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_waitForChange(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    cycleForever
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_cycleForever(JNIEnv *env, jclass, jlong);

  /*
 * Class:     be_uantwerpen_idlab_dust_core_Core_Native
 * Method:    cycleStop
 * Signature: (J)V
 */
  JNIEXPORT void JNICALL Java_be_uantwerpen_idlab_dust_core_Core_00024Native_cycleStop(JNIEnv *env, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
